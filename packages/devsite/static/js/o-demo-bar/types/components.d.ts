/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface ODemoBarButtons {}
  interface ODemoBarButtonsAttributes extends StencilHTMLAttributes {
    'onToolbarButtonClicked'?: (event: CustomEvent) => void;
  }

  interface ODemoBarSelect {
    'options': any;
  }
  interface ODemoBarSelectAttributes extends StencilHTMLAttributes {
    'onSelectedCaseChanged'?: (event: CustomEvent) => void;
    'options'?: any;
  }

  interface ODemoBarToolbar {
    'name': string;
    'options': any;
  }
  interface ODemoBarToolbarAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'options'?: any;
  }

  interface ODemoBar {
    'backgroundColor': string;
    'caseOptionSelected': number;
    'device': string;
    'deviceEmulate': boolean;
    'deviceSize': string;
    'events': string;
    'name': string;
    'pattern': boolean;
  }
  interface ODemoBarAttributes extends StencilHTMLAttributes {
    'backgroundColor'?: string;
    'caseOptionSelected'?: number;
    'device'?: string;
    'deviceEmulate'?: boolean;
    'deviceSize'?: string;
    'events'?: string;
    'name'?: string;
    'pattern'?: boolean;
  }

  interface ODemoCase {
    'name': string;
  }
  interface ODemoCaseAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface ODemoDevices {
    'orientation': string;
  }
  interface ODemoDevicesAttributes extends StencilHTMLAttributes {
    'orientation'?: string;
  }

  interface ODemoFab {}
  interface ODemoFabAttributes extends StencilHTMLAttributes {
    'onChange-device'?: (event: CustomEvent) => void;
    'onRotate-device'?: (event: CustomEvent) => void;
  }

  interface ODemoModal {
    'closeDialog': () => void;
    'code': any;
    'open': boolean;
    'openDialog': () => void;
  }
  interface ODemoModalAttributes extends StencilHTMLAttributes {
    'code'?: any;
    'onCode-editor-changed'?: (event: CustomEvent) => void;
    'open'?: boolean;
  }

  interface ODemoResizer {
    'setActiveViewPort': (size?: string) => void;
    'size': string;
    'viewport': string;
  }
  interface ODemoResizerAttributes extends StencilHTMLAttributes {
    'onResizeButtonClicked'?: (event: CustomEvent) => void;
    'size'?: string;
    'viewport'?: string;
  }

  interface ODemoSnackbar {
    'events': any;
  }
  interface ODemoSnackbarAttributes extends StencilHTMLAttributes {
    'events'?: any;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ODemoBarButtons': Components.ODemoBarButtons;
    'ODemoBarSelect': Components.ODemoBarSelect;
    'ODemoBarToolbar': Components.ODemoBarToolbar;
    'ODemoBar': Components.ODemoBar;
    'ODemoCase': Components.ODemoCase;
    'ODemoDevices': Components.ODemoDevices;
    'ODemoFab': Components.ODemoFab;
    'ODemoModal': Components.ODemoModal;
    'ODemoResizer': Components.ODemoResizer;
    'ODemoSnackbar': Components.ODemoSnackbar;
  }

  interface StencilIntrinsicElements {
    'o-demo-bar-buttons': Components.ODemoBarButtonsAttributes;
    'o-demo-bar-select': Components.ODemoBarSelectAttributes;
    'o-demo-bar-toolbar': Components.ODemoBarToolbarAttributes;
    'o-demo-bar': Components.ODemoBarAttributes;
    'o-demo-case': Components.ODemoCaseAttributes;
    'o-demo-devices': Components.ODemoDevicesAttributes;
    'o-demo-fab': Components.ODemoFabAttributes;
    'o-demo-modal': Components.ODemoModalAttributes;
    'o-demo-resizer': Components.ODemoResizerAttributes;
    'o-demo-snackbar': Components.ODemoSnackbarAttributes;
  }


  interface HTMLODemoBarButtonsElement extends Components.ODemoBarButtons, HTMLStencilElement {}
  var HTMLODemoBarButtonsElement: {
    prototype: HTMLODemoBarButtonsElement;
    new (): HTMLODemoBarButtonsElement;
  };

  interface HTMLODemoBarSelectElement extends Components.ODemoBarSelect, HTMLStencilElement {}
  var HTMLODemoBarSelectElement: {
    prototype: HTMLODemoBarSelectElement;
    new (): HTMLODemoBarSelectElement;
  };

  interface HTMLODemoBarToolbarElement extends Components.ODemoBarToolbar, HTMLStencilElement {}
  var HTMLODemoBarToolbarElement: {
    prototype: HTMLODemoBarToolbarElement;
    new (): HTMLODemoBarToolbarElement;
  };

  interface HTMLODemoBarElement extends Components.ODemoBar, HTMLStencilElement {}
  var HTMLODemoBarElement: {
    prototype: HTMLODemoBarElement;
    new (): HTMLODemoBarElement;
  };

  interface HTMLODemoCaseElement extends Components.ODemoCase, HTMLStencilElement {}
  var HTMLODemoCaseElement: {
    prototype: HTMLODemoCaseElement;
    new (): HTMLODemoCaseElement;
  };

  interface HTMLODemoDevicesElement extends Components.ODemoDevices, HTMLStencilElement {}
  var HTMLODemoDevicesElement: {
    prototype: HTMLODemoDevicesElement;
    new (): HTMLODemoDevicesElement;
  };

  interface HTMLODemoFabElement extends Components.ODemoFab, HTMLStencilElement {}
  var HTMLODemoFabElement: {
    prototype: HTMLODemoFabElement;
    new (): HTMLODemoFabElement;
  };

  interface HTMLODemoModalElement extends Components.ODemoModal, HTMLStencilElement {}
  var HTMLODemoModalElement: {
    prototype: HTMLODemoModalElement;
    new (): HTMLODemoModalElement;
  };

  interface HTMLODemoResizerElement extends Components.ODemoResizer, HTMLStencilElement {}
  var HTMLODemoResizerElement: {
    prototype: HTMLODemoResizerElement;
    new (): HTMLODemoResizerElement;
  };

  interface HTMLODemoSnackbarElement extends Components.ODemoSnackbar, HTMLStencilElement {}
  var HTMLODemoSnackbarElement: {
    prototype: HTMLODemoSnackbarElement;
    new (): HTMLODemoSnackbarElement;
  };

  interface HTMLElementTagNameMap {
    'o-demo-bar-buttons': HTMLODemoBarButtonsElement
    'o-demo-bar-select': HTMLODemoBarSelectElement
    'o-demo-bar-toolbar': HTMLODemoBarToolbarElement
    'o-demo-bar': HTMLODemoBarElement
    'o-demo-case': HTMLODemoCaseElement
    'o-demo-devices': HTMLODemoDevicesElement
    'o-demo-fab': HTMLODemoFabElement
    'o-demo-modal': HTMLODemoModalElement
    'o-demo-resizer': HTMLODemoResizerElement
    'o-demo-snackbar': HTMLODemoSnackbarElement
  }

  interface ElementTagNameMap {
    'o-demo-bar-buttons': HTMLODemoBarButtonsElement;
    'o-demo-bar-select': HTMLODemoBarSelectElement;
    'o-demo-bar-toolbar': HTMLODemoBarToolbarElement;
    'o-demo-bar': HTMLODemoBarElement;
    'o-demo-case': HTMLODemoCaseElement;
    'o-demo-devices': HTMLODemoDevicesElement;
    'o-demo-fab': HTMLODemoFabElement;
    'o-demo-modal': HTMLODemoModalElement;
    'o-demo-resizer': HTMLODemoResizerElement;
    'o-demo-snackbar': HTMLODemoSnackbarElement;
  }


}
